/* eslint-disable @next/next/no-img-element */
import {
  Dialog,
  DialogTrigger,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { toast } from "react-toastify";
import axios from "axios";
import { useState } from "react";
import { useUser } from "../providers/UserProvider";

type UserDeliveryDialogProps = {
  trackingNumber: string;
};

const GetFromCargoDialog = ({ trackingNumber }: UserDeliveryDialogProps) => {
  const value = useUser();
  const [isLoading, setIsLoading] = useState(false);

  const choosePickupOrDelivery = async () => {
    if (!value?.userId || !value?.phoneNumber) {
      toast.error("‚ùå –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª –¥—É—Ç—É—É –±–∞–π–Ω–∞.");
      return;
    }

    try {
      setIsLoading(true);

      const response = await axios.get(
        `${process.env.NEXT_PUBLIC_BASE_URL}/choosePickupOrDelivery/${trackingNumber}`
      );

      if (response.data.success === false) {
        toast.error("‚ùå –≠–Ω—ç —Ö—ç—Ä—ç–≥–ª—ç–≥—á –∞–ª—å —Ö—ç–¥–∏–π–Ω —Ö–∞—è–≥ —Å–æ–Ω–≥–æ—Å–æ–Ω –±–∞–π–Ω–∞.");
        return;
      }

      await axios.post(
        `${process.env.NEXT_PUBLIC_BASE_URL}/choosePickupOrDelivery/${value.userId}`,
        {
          status: "–°–∞–ª–±–∞—Ä–∞–∞—Å –∞–≤–∞—Ö",
          phoneNumber: value.phoneNumber,
          trackingNumber: trackingNumber,
        }
      );

      toast.success("‚úÖ –•–∞—è–≥ –∞–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥–ª—ç—ç!");
    } catch (error) {
      toast.error("‚ùå –•–∞—è–≥ –∏–ª–≥—ç—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞!");
      console.error(error);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <Dialog>
      <DialogTrigger asChild>
        <button className="w-full h-10 text-sm cursor-pointer border border-gray-300/60 font-medium rounded-lg bg-gray-100 text-gray-800 hover:bg-gray-300 transition-colors">
          üìç –•–∞—è–≥ —Å–æ–Ω–≥–æ—Ö
        </button>
      </DialogTrigger>

      <DialogContent>
        <DialogHeader>
          <DialogTitle>–•–∞—è–≥ –º—ç–¥—ç—ç–ª—ç–ª</DialogTitle>
          <DialogDescription>
            –î–æ–æ—Ä—Ö —Ö–∞—è–≥ –¥—ç—ç—Ä –æ—á–∏–∂ –∞—á–∞–∞–≥–∞–∞ –∞–≤–Ω–∞ —É—É.
          </DialogDescription>
        </DialogHeader>

        <div className="w-fit px-2">
          <a
            href="https://www.google.com/maps?q=47.9145,106.9225"
            target="_blank"
            rel="noopener noreferrer"
            className="flex gap-4 items-start"
          >
            <img
              src="/img.JPG"
              alt="Google Maps"
              className="h-40 w-40 rounded-md object-cover"
            />
            <div className="text-black text-sm max-w-xs">
              –°–ë–î –¶–∏—Ä–∫-–Ω –±–∞—Ä—É—É–Ω —Ç–∞–ª–¥, –º–∏–Ω–∏–π –¥—ç–ª–≥“Ø“Ø—Ä–∏–π–Ω —á–∞–Ω—Ö —Ö–æ–π–Ω–æ, 10-—Ä –±–∞–π—Ä.
              <div className="text-blue-600 underline mt-2">
                map –¥—ç—ç—Ä —Ö–∞—Ä–∞—Ö ‚Üí
              </div>
            </div>
          </a>

          <button
            onClick={choosePickupOrDelivery}
            disabled={isLoading}
            className={`mt-4 w-full h-10 text-sm font-medium rounded-lg transition-colors ${
              isLoading
                ? "bg-gray-300 text-gray-500 cursor-not-allowed"
                : "bg-gray-100 text-gray-800 hover:bg-gray-300 cursor-pointer"
            }`}
          >
            {isLoading ? "–ò–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞..." : "üè¢ –°–∞–ª–±–∞—Ä–∞–∞—Å –∞–≤–∞—Ö"}
          </button>
        </div>
      </DialogContent>
    </Dialog>
  );
};

export default GetFromCargoDialog;
