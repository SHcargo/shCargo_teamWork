"use client";
import { useRouter } from "next/navigation";
import Post from "../components/post";
import { useState } from "react";
import { UserOrderCard } from "../components/userOrderCard";

const Cargo = () => {
  const [activeCategory, setActiveCategory] = useState("–ë“Ø–≥–¥");
  const categories = ["–ë“Ø–≥–¥", "–•—è—Ç–∞–¥ –¥–æ—Ç–æ—Ä", "–ó–∞–º–¥", "–£–ë —Ö–æ—Ç–æ–¥", "–•“Ø—Ä–≥—ç–≥–¥—Å—ç–Ω"];

  const deliveryCounts: Record<string, number> = {
    –ë“Ø–≥–¥: 10,
    "–•—è—Ç–∞–¥ –¥–æ—Ç–æ—Ä": 3,
    –ó–∞–º–¥: 2,
    "–£–ë —Ö–æ—Ç–æ–¥": 4,
    –•“Ø—Ä–≥—ç–≥–¥—Å—ç–Ω: 1,
  };

  const orders = [
    { id: 1, status: "–•—è—Ç–∞–¥ –¥–æ—Ç–æ—Ä", description: "–≠—Ä—ç—ç–Ω–¥ –±–∞–π–Ω–∞", count: 1 },
    { id: 2, status: "–ó–∞–º–¥", description: "–ó–∞–º–¥ –≥–∞—Ä—Å–∞–Ω", count: 2 },
    { id: 3, status: "–£–ë —Ö–æ—Ç–æ–¥", description: "–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä—Ç –∏—Ä—Å—ç–Ω", count: 4 },
    { id: 4, status: "–•“Ø—Ä–≥—ç–≥–¥—Å—ç–Ω", description: "–•“Ø—Ä–≥—ç–≥–¥—Å—ç–Ω", count: 1 },
    { id: 5, status: "–•—è—Ç–∞–¥ –¥–æ—Ç–æ—Ä", description: "–ë–æ–æ–º—Ç –¥—ç—ç—Ä", count: 2 },
  ];

  const handleCategoryClick = (category: string) => {
    setActiveCategory(category);
  };

  const filteredOrders =
    activeCategory === "–ë“Ø–≥–¥"
      ? orders
      : orders.filter((order) => order.status === activeCategory);

  return (
    <div className="max-w-2xl w-full mx-auto p-4 bg-white rounded-2xl shadow-md space-y-4 h-screen overflow-hidden">
      <Post />

      <div className="mt-4 flex flex-wrap gap-4">
        {categories.map((category) => (
          <button
            key={category}
            onClick={() => handleCategoryClick(category)}
            className={`px-4 py-2 rounded-lg transition-all ${
              activeCategory === category
                ? "bg-[#5F2DF5] text-white"
                : "bg-gray-100 text-[#5F2DF5]"
            }`}
          >
            {category} ({deliveryCounts[category]})
          </button>
        ))}
      </div>

      <div className="space-y-4 overflow-y-auto h-6/12 bg-gray-50 rounded-xl p-2 shadow-inner">
        {filteredOrders.map((order) => (
          <UserOrderCard
            key={order.id}
            count={order.count}
            description={order.description}
          />
        ))}
      </div>

      <div className="bg-red-100 p-4 rounded-xl flex items-center justify-between">
        <span className="text-red-600 font-semibold text-lg">
          üìç –•“Ø—Ä–≥—ç–ª—Ç“Ø“Ø–¥
        </span>
        <button className="text-gray-400 text-xl">‚Ä∫</button>
      </div>
    </div>
  );
};

export default Cargo;
